{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","clasName","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","console","log","setState","this","movie","medium_cover_image","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAiCeA,MA7Bf,YAAyD,EAAzCC,GAA0C,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAC7C,OACA,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKO,SAAS,cAAd,UACA,oBAAIH,UAAU,eAAd,SAA+BJ,IAC/B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SAGGD,EAAOK,KAAI,SAACC,EAAMC,GAAP,OAAgB,oBAAgBN,UAAU,gBAA1B,SAA2CK,GAAlCC,QAGvC,oBAAGN,UAAU,iBAAb,UAA+BH,EAAQU,MAAM,EAAE,KAA/C,gB,iBCuCOC,G,kNA/CbC,MAAM,CACJC,WAAW,EACXC,OAAO,I,EAGTC,U,sBAAU,8BAAAC,EAAA,sEAQAC,IAAMC,IAAI,6CARV,gBAKFJ,EALE,EAGNK,KACEA,KACEL,OAKNM,QAAQC,IAAIP,GAEZ,EAAKQ,SAAS,CAACR,OAAOA,EAAQD,WAAU,IAZhC,2C,kEAiBVU,KAAKR,c,+BAGK,IAAD,EACmBQ,KAAKX,MAAxBC,EADA,EACAA,UAAWC,EADX,EACWA,OAClB,OACE,yBAASX,UAAU,YAAnB,SACIU,EAAa,qBAAKV,UAAU,SAAf,SACb,sBAAMA,UAAU,eAAhB,0BACO,qBAAKA,UAAU,SAAf,SAAyBW,EAAOP,KAAI,SAAAiB,GAAK,OAClD,cAAC,EAAD,CACC3B,GAAI2B,EAAM3B,GACVC,KAAM0B,EAAM1B,KACZC,MAAOyB,EAAMzB,MACbC,QAASwB,EAAMxB,QACfC,OAAQuB,EAAMC,mBACdvB,OAAQsB,EAAMtB,QANHsB,EAAM3B,e,GAnCR6B,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAIFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.81c95f79.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, year, title, summary, poster,genres}){\r\n    return (\r\n    <div className=\"movie\">\r\n        <img src={poster} alt={title} title={title}/>\r\n        <div clasName=\"movie__data\">\r\n        <h3 className=\"movie__title\" >{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n\r\n            {\r\n           genres.map((genre,index)=>(<li key={index} className=\"genres__genre\">{genre}</li>))\r\n         }\r\n         </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0,300)}...</p>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nMovie.propTypes={\r\n\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres:PropTypes.arrayOf(PropTypes.string).isRequired\r\n    \r\n};\r\n\r\nexport default Movie;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Movie from \"./Movie\";\nimport axios from \"axios\";\nimport \"./App.css\"\n\nclass App extends Component {\n \n\n  state={\n    isLoading: true,\n    movies:[]\n  }\n\n  getMovies=async()=>{\n    const\n    {\n      data:{\n        data:{\n          movies\n        }\n      }\n    }=await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n\n    console.log(movies);\n\n    this.setState({movies:movies, isLoading:false});\n\n  }\n\n  componentDidMount() {\n  this.getMovies();\n  }\n\n  render() {\n    const {isLoading, movies}=this.state;\n    return (\n      <section className=\"container\">\n        { isLoading ?  <div className=\"loader\">\n          <span className=\"loader__text\">loading...</span>\n        </div> : <div className=\"movies\">{movies.map(movie=>(\n        <Movie key={movie.id}\n         id={movie.id} \n         year={movie.year} \n         title={movie.title}\n         summary={movie.summary}\n         poster={movie.medium_cover_image}\n         genres={movie.genres}>\n        </Movie>))}</div>\n}\n      </section>\n    );\n  }\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App/>\n    \n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}